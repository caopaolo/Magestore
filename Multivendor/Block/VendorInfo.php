<?php
/**
 * Created by PhpStorm.
 * User: anhnc
 * Date: 16/01/2017
 * Time: 09:35
 */

namespace Magestore\Multivendor\Block;


class VendorInfo extends \Magento\Framework\View\Element\Template
{
    protected $_vendorCollectionFactory;
    protected $_vendorProductCollectionFactory;
    public $_storeManager;
    protected $_objectManager;
    protected $_configHelper;
    public function __construct(
        \Magento\Framework\View\Element\Template\Context $context,
        \Magento\Store\Model\StoreManagerInterface $storeManager,
        \Magestore\Multivendor\Model\ResourceModel\Vendor\CollectionFactory $vendorCollectionFactory,
        \Magento\Framework\ObjectManagerInterface $objectManager,
        \Magestore\Multivendor\Helper\Config $configHelper,
        \Magestore\Multivendor\Model\ResourceModel\VendorProduct\CollectionFactory $vendorProductCollectionFactory,
        array $data = []
    )
    {
        $this->_storeManager=$storeManager;
        $this->_configHelper = $configHelper;
        $this->_objectManager = $objectManager;
        $this->_vendorCollectionFactory = $vendorCollectionFactory;
        $this->_vendorProductCollectionFactory = $vendorProductCollectionFactory;
        parent::__construct($context, $data);
    }
    public function getVendorInfo(){
        $productId = $this->getRequest()->getParam('id');
        $vendorProductCollection = $this->_vendorProductCollectionFactory->create();
        $data = $vendorProductCollection->addFieldToFilter('product_ids',array('finset' => array($productId)))->toArray();
        $vendor_data = array();
        foreach ($data['items'] as $value){
            $vendor_model = $this->_objectManager->create('Magestore\Multivendor\Model\Vendor')->load($value['vendor_id']);
            array_push($vendor_data,$vendor_model->getData());
        }
        return $vendor_data;
    }
    public function getMediaUrl(){
        $media_dir = $this->_storeManager->getStore()->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
        return $media_dir;
    }
    public function  toHtml()
    {
        if($this->_configHelper->getStoreConfig('multivendor/general/active') == 0){
            return '';
        }
        else{
            return parent::toHtml(); // TODO: Change the autogenerated stub
        }
    }
}